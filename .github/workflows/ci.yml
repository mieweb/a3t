name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Run tests with coverage
      if: matrix.node-version != '16.x'
      run: npm run test:coverage || true
      
  test-mongodb:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Wait for MongoDB
      run: |
        echo "Waiting for MongoDB to be ready..."
        for i in {1..30}; do
          if node -e "
            const { MongoClient } = require('mongodb');
            const client = new MongoClient('mongodb://root:password@localhost:27017/test?authSource=admin');
            client.connect()
              .then(() => {
                console.log('MongoDB is ready');
                process.exit(0);
              })
              .catch(() => {
                process.exit(1);
              });
          " >/dev/null 2>&1; then
            echo "MongoDB is ready!"
            break
          fi
          echo "Attempt $i/30: MongoDB not ready yet, waiting..."
          sleep 2
        done
        
    - name: Run MongoDB integration tests
      run: npm run test:mongodb || npm test
      env:
        MONGODB_URI: mongodb://root:password@localhost:27017/test?authSource=admin